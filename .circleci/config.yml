version: 2

# In many of the jobs below, you’ll see `working_directory` specified, and that
# the `checkout` step has a different path specified (the default path). This is
# because it’s a little tricky to get `working_directory` and `checkout` to work
# together when I want the working directory for all steps *except*
# `checkout` to be a subdirectory of the project — because by default,
# `checkout` checks out into the specified `working_directory`. I found this
# solution here: https://stackoverflow.com/a/50570581/7012

jobs:
   tool_deps:
     docker:
       - image: clojure:tools-deps-alpine

     working_directory: ~/project/tool

     steps:
       - checkout:
           path: ~/project

       - restore_cache:
           keys:
           - deps-{{ checksum "deps.edn" }}
           # fallback to using the latest cache if no exact match is found
           - deps-

       - run:
          name: Download dependencies (if necessary)
          # Clojure automatically downloads deps if necessary
          command: clojure -R:test:test/coverage:lint -Stree

       - save_cache:
           key: deps-{{ checksum "deps.edn" }}
           paths:
           - .cpcache
           - ~/.m2
           - ~/.gitlibs

   tool_test:
     docker:
       - image: clojure:tools-deps-alpine

     working_directory: ~/project/tool

     steps:
       - checkout:
           path: ~/project

       - restore_cache:
           keys:
           - deps-{{ checksum "deps.edn" }}
           # fallback to using the latest cache if no exact match is found
           - deps-

       - run:
          name: Run tests and measure test coverage
          # The max heap size is set to 2GB because I’ve seen OOM errors at 1GB and below. (JDK 8
          # defaults to setting the max heap to ¼ of the total RAM, and CI containers frequently have
          # <= 4GB RAM.)
          command: clojure -J-Xmx2g -A:test:test/coverage

       - store_test_results:
          path: target/test-results

       - store_artifacts:
          path: target/coverage

       - run:
          name: Upload test coverage report to Codecov
          command: bash <(curl -s https://codecov.io/bash)

   tool_lint:
     docker:
       - image: clojure:tools-deps-alpine

     working_directory: ~/project/tool

     steps:
       - checkout:
           path: ~/project

       - restore_cache:
           keys:
           - deps-{{ checksum "deps.edn" }}
           # fallback to using the latest cache if no exact match is found
           - deps-

       - run:
          name: lint
          command: clojure -A:lint

workflows:
  version: 2
  tool:
    jobs:
      - tool_deps
      - tool_test:
          requires:
            - tool_deps
      - tool_lint:
          requires:
            - tool_deps
