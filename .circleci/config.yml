version: 2

# All the tool_* jobs specify the checkout path, and then set a
# `working_directory` that’s different than the default and is _underneath_ the
# checkout path. This is because it’s a little tricky to get `working_directory`
# and `checkout` to work together when I want the working directory for all
# steps *except* `checkout` to be a subdirectory of the project — because by
# default, `checkout` checks out into the specified `working_directory`. I found
# this solution here: https://stackoverflow.com/a/50570581/7012
tool_job_defaults: &tool_job_defaults
  working_directory: ~/project/tool
  docker:
    - image: quay.io/fundingcircle/clojure-node-chromium:clojure-1.9.0.394_node-10.12_alpine-3.8

restore_cache_clj: &restore_cache_clj
  name: Restore cached Clojure dependencies
  keys:
  - clj-deps-{{ checksum "deps.edn" }}
  # fallback to using the latest cache if no exact match is found
  - clj-deps-

restore_cache_node: &restore_cache_node
  name: Restore cached Node dependencies
  keys:
  - node-deps-{{ checksum "renderer/package.json" }}
  # fallback to using the latest cache if no exact match is found
  - node-deps-

jobs:
   tool_deps:
     <<: *tool_job_defaults
     steps:
       - checkout:
           path: ~/project
       - restore_cache:
           <<: *restore_cache_clj
       - restore_cache:
           <<: *restore_cache_node

       - run:
          name: Download Clojure Dependencies (if necessary)
          command: bin/download-clojure-deps

       - run:
          name: Download Node Dependencies (if necessary)
          command: bin/download-node-deps

       - save_cache:
           name: Save Clojure Dependencies (if changed)
           key: clj-deps-{{ checksum "deps.edn" }}
           paths:
           - .cpcache
           - ~/.m2
           - ~/.gitlibs

       - save_cache:
           name: Save Node Dependencies (if changed)
           key: node-deps-{{checksum "renderer/package.json"}}
           paths:
           - renderer/node_modules

   tool_test:
     <<: *tool_job_defaults
     steps:
       - checkout:
           path: ~/project
       - restore_cache:
           <<: *restore_cache_clj
       - restore_cache:
           <<: *restore_cache_node

       - run:
          name: Run tests and measure test coverage
          command: bin/tests-with-coverage

       - store_test_results:
          path: target/test-results

       - store_artifacts:
          path: target/coverage

       - run:
          name: Upload test coverage report to Codecov
          command: bash <(curl -s https://codecov.io/bash)

   tool_lint:
     <<: *tool_job_defaults
     steps:
       - checkout:
           path: ~/project
       - restore_cache:
           <<: *restore_cache_clj
       - restore_cache:
           <<: *restore_cache_node
       - run:
          name: lint
          command: clojure -A:lint

   tool_build_dist_pkg:
     <<: *tool_job_defaults
     steps:
       - checkout:
           path: ~/project
       - restore_cache:
           <<: *restore_cache_clj
       - restore_cache:
           <<: *restore_cache_node
       - run:
           name: Create distribution packages
           command: bin/pkg-all
       - run: mkdir -p /workspace/packages && mv target/pkg/*.gz packages/
       - store_artifacts:
           path: /workspace/packages
       - persist_to_workspace:
           root: /workspace
           paths: [packages]

   tool_publish_dist_pkg:
     <<: *tool_job_defaults
     steps:
       - attach_workspace:
            at: /workspace
       - run:
           name: Download and unpack ghr
           command: |
             wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_amd64.tar.gz
             tar -xzf ghr_v0.12.0_linux_amd64.tar.gz --strip-components 1 ghr_v0.12.0_linux_amd64/ghr
       - run:
           name: Create GitHub Release and upload distribution packages to it
           # command: ./ghr -t ${GITHUB_TOKEN:-GITHUB_TOKEN_NOT_SET} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG:-CIRCLE_TAG_NOT_SET} /workspace/packages/*.gz
           # TODO BEFORE MERGING TO MASTER: un-comment-out the above and delete the below
           command: ./ghr -t ${GITHUB_TOKEN:-GITHUB_TOKEN_NOT_SET} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete "$CIRCLE_BRANCH_$CIRCLE_SHA1" /workspace/packages/*.gz

workflows:
  version: 2
  tool:
    jobs:
      - tool_deps:
          filters:
            tags:
              only: /.*/
      - tool_test:
          requires:
            - tool_deps
          filters:
            tags:
              only: /.*/
      - tool_lint:
          requires:
            - tool_deps
          filters:
            tags:
              only: /.*/
      - tool_build_dist_pkg:
          requires:
            - tool_test
            - tool_lint
          filters:
            tags:
              only: /.*/
      - tool_publish_dist_pkg:
          requires:
            - tool_build_dist_pkg
          # TODO BEFORE MERGING TO MASTER: un-comment-out the below
          # filters:
          #   tags:
          #     only: /.*/
          #   branches:
          #     ignore: /.*/
